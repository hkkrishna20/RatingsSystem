server.port = 80
# Applicationn context name
server.servlet.contextPath=/rateApp
spring.mvc.view.prefix: /templates/
spring.mvc.view.suffix: .jsp

multipart.max-file-size=100MB
multipart.max-request-size=100MB
spring.servlet.multipart.max-file-size=-1
#==== connect to mysql ======#

#spring.datasource.url=jdbc:mysql://localhost:3306/integration?useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=root

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver


spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

 
spring.datasource.url=jdbc:h2:file:~/test;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS test;
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.jpa.show-sql=true shows the SQL while Hibernate
spring.jpa.show-sql=true
# create and drops the database on every run
#spring.jpa.hibernate.ddl-auto=update

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.jpa.properties.hibernate.hbm2ddl.auto=update

# Datasource
spring.datasource.driver-class-name=org.h2.Driver

#Turn Statistics on
spring.jpa.properties.hibernate.generate_statistics=true

spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=10000

# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=50

# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-on-borrow=true

#spring.datasource.jndi-name=java:jboss/datasources/customers

spring.datasource.hikari.maximum-pool-size=2


# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always